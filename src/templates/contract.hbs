import { deployContract } from '{{ ixDependency }}'

import {
  getEnvironment,
  replaceImportAddresses,
  reportMissingImports,
  reportMissing
} from 'flow-template-generator'

export const CODE = `
  {{ code }}
`;

/**
* Method to generate cadence code for {{ assetName }} transaction
* @param {Object.<string, string>} addressMap - contract name as a key and address where it's deployed as value
* @param {( "emulator" | "testnet" | "mainnet" )} [env] - current working environment, defines default deployed contracts
*/
export const {{ assetName }}Template = async (addressMap = {}) => {
  const envMap = await getEnvironment(env);
  const fullMap = {
  ...envMap,
  ...addressMap,
  };

  // If there are any missing imports in fullMap it will be reported via console
  reportMissingImports(CODE, fullMap, `{{ name }} =>`)

  return replaceImportAddresses(CODE, fullMap);
};


/**
* Deploys {{ assetName }} transaction to the network
* @param {Object.<string, string>} addressMap - contract name as a key and address where it's deployed as value
* @param Array<*> args - list of arguments
* param Array<string> - list of signers
*/
export const  deploy{{ assetName }} = async ({ addressMap = {}, args = [], to, update = false }) => {
  const code = await {{ assetName }}Template(addressMap, env, args);
  const name = {{ contractName }}

  reportMissing("arguments", args.length, {{ argsAmount }}, {{assetName}});
  reportMissing("signers", signers.length, 1, {{assetName}});

  return deployContract({ code, args, to, update, name })
}